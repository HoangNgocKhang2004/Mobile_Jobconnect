@{
    ViewData["Title"] = "Tin nhắn";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<link href="~/css/chat/index.css" rel="stylesheet" />

<div class="chat-container">
    <div class="chat-sidebar">
        <div class="user-profile">
            <div class="profile-img">
                <img src="/api/placeholder/40/40" alt="Profile" />
            </div>
            <div class="profile-info">
                <h3>Nhà tuyển dụng</h3>
                <p class="online-status online">Đang hoạt động</p>
            </div>
        </div>

        <div class="search-box">
            <input type="text" placeholder="Tìm kiếm ứng viên..." />
            <i class="fa fa-search"></i>
        </div>

        <div class="conversation-list">
            <div class="conversation active">
                <div class="chat-avatar">
                    <img src="/api/placeholder/40/40" alt="Avatar" />
                </div>
                <div class="chat-info">
                    <h4>Ứng viên A</h4>
                    <p>Chào bạn! Chúng tôi đã xem qua CV...</p>
                    <span class="chat-time">10:30</span>
                </div>
            </div>

            <div class="conversation">
                <div class="chat-avatar">
                    <img src="/api/placeholder/40/40" alt="Avatar" />
                </div>
                <div class="chat-info">
                    <h4>Ứng viên B</h4>
                    <p>Mời bạn tham gia buổi phỏng vấn...</p>
                    <span class="chat-time">Hôm qua</span>
                    <span class="unread-count">3</span>
                </div>
            </div>

            <div class="conversation">
                <div class="chat-avatar">
                    <img src="/api/placeholder/40/40" alt="Avatar" />
                </div>
                <div class="chat-info">
                    <h4>Ứng viên C</h4>
                    <p>Cảm ơn bạn đã gửi CV...</p>
                    <span class="chat-time">12/04</span>
                </div>
            </div>
        </div>
    </div>

    <div class="chat-main">
        <div class="chat-header">
            <div class="contact-info">
                <div class="contact-avatar">
                    <img src="/api/placeholder/40/40" alt="Contact" />
                </div>
                <div class="contact-details">
                    <h3>Ứng viên A</h3>
                    <p>Ứng viên • Đang hoạt động</p>
                </div>
            </div>
            <div class="chat-actions">
                <button class="btn-action call-btn"><i class="fa fa-phone"></i></button>
                <button class="btn-action video-btn"><i class="fa fa-video"></i></button>
                <button class="btn-action info-btn"><i class="fa fa-info-circle"></i></button>
            </div>
        </div>

        <div class="chat-messages" id="chatMessages">
            <div class="message-date">
                <span>Hôm nay</span>
            </div>

            <div class="message received">
                <div class="message-avatar">
                    <img src="/api/placeholder/30/30" alt="Avatar" />
                </div>
                <div class="message-content">
                    <div class="message-text">
                        <p>Chào bạn! Chúng tôi đã xem qua CV của bạn và rất ấn tượng với kinh nghiệm của bạn. Chúng tôi muối bạn tham gia buổi phỏng vấn vào thứ 5 tuần này lúc 14:00. Bạn có thể tham gia được không?</p>
                    </div>
                    <span class="message-time">10:28</span>
                </div>
            </div>

            <div class="message sent">
                <div class="message-content">
                    <div class="message-text">
                        <p>Chào nhà tuyển dụng! Cảm ơn vì đã quan tâm đến hồ sơ của tôi. Tôi có thể tham gia phỏng vấn vào thời gian đó. Tôi rất háo hức được trò chuyện thêm về vị trí và đóng góp tiềm năng của tôi cho công ty.</p>
                    </div>
                    <span class="message-time">10:30</span>
                </div>
            </div>

            <div class="message sent">
                <div class="message-content">
                    <div class="message-text file-message">
                        <div class="file-attachment">
                            <i class="fa fa-file-pdf"></i>
                            <div class="file-info">
                                <p class="file-name">Project_Portfolio.pdf</p>
                                <p class="file-size">2.4 MB</p>
                            </div>
                            <button class="download-btn"><i class="fa fa-download"></i></button>
                        </div>
                    </div>
                    <span class="message-time">10:33</span>
                </div>
            </div>

            <div class="message received">
                <div class="message-avatar">
                    <img src="/api/placeholder/30/30" alt="Avatar" />
                </div>
                <div class="message-content">
                    <div class="message-text">
                        <p>Tuyệt vời! Chúng tôi sẽ gửi cho bạn một email với các chi tiết và liên kết phỏng vấn. Bạn có câu hỏi nào về quy trình phỏng vấn không?</p>
                    </div>
                    <span class="message-time">10:45</span>
                </div>
            </div>

            <div class="message received">
                <div class="message-avatar">
                    <img src="/api/placeholder/30/30" alt="Avatar" />
                </div>
                <div class="message-content">
                    <div class="message-text">
                        <p>Cảm ơn bạn đã chia sẻ! Portfolio của bạn rất ấn tượng. Chúng tôi muốn mời bạn tham gia buổi phỏng vấn trực tuyến vào thứ 5 tuần này lúc 14:00. Bạn có thể tham gia được không?</p>
                    </div>
                    <span class="message-time">10:45</span>
                </div>
            </div>

            <div class="message sent">
                <div class="message-content">
                    <div class="message-text">
                        <p>Vâng, tôi có thể tham gia phỏng vấn vào thời gian đó. Tôi rất háo hức được trò chuyện thêm về vị trí và đóng góp tiềm năng của tôi cho công ty.</p>
                    </div>
                    <span class="message-time">10:50</span>
                </div>
            </div>

            <div class="message received">
                <div class="message-avatar">
                    <img src="/api/placeholder/30/30" alt="Avatar" />
                </div>
                <div class="message-content">
                    <div class="message-text">
                        <p>Tuyệt vời! Chúng tôi sẽ gửi cho bạn một email với các chi tiết và liên kết phỏng vấn. Bạn có câu hỏi nào về quy trình phỏng vấn không?</p>
                    </div>
                    <span class="message-time">11:02</span>
                </div>
            </div>

            <!-- Chatbot auto-reply message -->
            <div class="message received bot-message">
                <div class="message-avatar">
                    <img src="/api/placeholder/30/30" alt="Bot" />
                    <span class="bot-indicator">Bot</span>
                </div>
                <div class="message-content">
                    <div class="message-text">
                        <p>Nhà tuyển dụng hiện đang bận. Chúng tôi sẽ phản hồi sớm nhất có thể. Trong thời gian chờ đợi, bạn có thể tìm hiểu thêm về công ty tại website: <a href="#">www.abc-company.com</a></p>
                    </div>
                    <span class="message-time">12:15</span>
                </div>
            </div>
        </div>

        <div class="chat-input-area">
            <div class="input-actions">
                <button class="action-btn attach-btn"><i class="fa fa-paperclip"></i></button>
                <button class="action-btn emoji-btn"><i class="fa fa-smile"></i></button>
            </div>
            <div class="message-input">
                <textarea placeholder="Nhập tin nhắn..." id="messageInput"></textarea>
            </div>
            <button class="send-btn" id="sendBtn"><i class="fa fa-paper-plane"></i></button>
        </div>

        <!-- File upload dialog (hidden by default) -->
        <div class="file-upload-dialog" id="fileUploadDialog" style="display: none;">
            <div class="file-upload-header">
                <h3>Gửi tài liệu</h3>
                <button class="close-dialog" id="closeFileDialog"><i class="fa fa-times"></i></button>
            </div>
            <div class="file-upload-content">
                <div class="upload-area" id="uploadArea">
                    <i class="fa fa-cloud-upload-alt"></i>
                    <p>Kéo và thả tệp vào đây hoặc</p>
                    <label for="fileInput" class="upload-btn">Chọn tệp</label>
                    <input type="file" id="fileInput" style="display: none;" multiple>
                </div>
                <div class="file-list" id="fileList">
                    <!-- Selected files will appear here -->
                </div>
                <div class="upload-actions">
                    <button class="cancel-btn">Hủy</button>
                    <button class="submit-btn">Gửi</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Profile panel (can be toggled) -->
    <div class="profile-panel">
        <div class="profile-header">
            <h3>Thông tin liên hệ</h3>
            <button class="close-profile"><i class="fa fa-times"></i></button>
        </div>
        <div class="profile-content">
            <div class="profile-image">
                <img src="/api/placeholder/100/100" alt="Company Profile">
            </div>
            <h2 class="profile-name">Công ty ABC</h2>
            <p class="profile-title">Công nghệ thông tin</p>
            <div class="profile-info-section">
                <h4>Thông tin</h4>
                <div class="info-item">
                    <i class="fa fa-map-marker-alt"></i>
                    <p>Quận 1, TP. Hồ Chí Minh</p>
                </div>
                <div class="info-item">
                    <i class="fa fa-globe"></i>
                    <p>www.abc-company.com</p>
                </div>
                <div class="info-item">
                    <i class="fa fa-users"></i>
                    <p>100-500 nhân viên</p>
                </div>
            </div>
            <div class="profile-info-section">
                <h4>Vị trí đang tuyển</h4>
                <div class="job-item">
                    <h5>Senior .NET Developer</h5>
                    <p>Đăng 2 ngày trước</p>
                </div>
            </div>
            <div class="shared-files">
                <h4>Tệp đã chia sẻ</h4>
                <div class="shared-file-item">
                    <i class="fa fa-file-pdf"></i>
                    <div class="shared-file-info">
                        <p>Project_Portfolio.pdf</p>
                        <span>Hôm nay, 10:33</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Variables
        const attachBtn = document.querySelector('.attach-btn');
        const fileUploadDialog = document.getElementById('fileUploadDialog');
        const closeFileDialog = document.getElementById('closeFileDialog');
        const messageInput = document.getElementById('messageInput');
        const sendBtn = document.getElementById('sendBtn');
        const chatMessages = document.getElementById('chatMessages');
        const infoBtn = document.querySelector('.info-btn');
        const profilePanel = document.querySelector('.profile-panel');
        const closeProfile = document.querySelector('.close-profile');

        // Initialize (hide profile panel by default)
        profilePanel.style.display = 'none';

        // Toggle file upload dialog
        attachBtn.addEventListener('click', function() {
            fileUploadDialog.style.display = 'block';
        });

        closeFileDialog.addEventListener('click', function() {
            fileUploadDialog.style.display = 'none';
        });

        // Toggle profile panel
        infoBtn.addEventListener('click', function() {
            if (profilePanel.style.display === 'none') {
                profilePanel.style.display = 'flex';
            } else {
                profilePanel.style.display = 'none';
            }
        });

        closeProfile.addEventListener('click', function() {
            profilePanel.style.display = 'none';
        });

        // Handle sending messages
        sendBtn.addEventListener('click', sendMessage);
        messageInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                sendMessage();
            }
        });

        function sendMessage() {
            const message = messageInput.value.trim();
            if (message !== '') {
                // Create message element
                const messageElement = document.createElement('div');
                messageElement.className = 'message sent';

                const currentTime = new Date();
                const hours = currentTime.getHours().toString().padStart(2, '0');
                const minutes = currentTime.getMinutes().toString().padStart(2, '0');
                const timeString = `${hours}:${minutes}`;

                messageElement.innerHTML = `
                    <div class="message-content">
                        <div class="message-text">
                            <p>${message}</p>
                        </div>
                        <span class="message-time">${timeString}</span>
                    </div>
                `;

                // Append to chat
                chatMessages.appendChild(messageElement);

                // Clear input
                messageInput.value = '';

                // Scroll to bottom
                chatMessages.scrollTop = chatMessages.scrollHeight;

                // Simulate chatbot reply after a delay
                setTimeout(function() {
                    // Show typing indicator first
                    const typingIndicator = document.createElement('div');
                    typingIndicator.className = 'message received typing-indicator';
                    typingIndicator.innerHTML = `
                        <div class="message-avatar">
                            <img src="/api/placeholder/30/30" alt="Avatar" />
                        </div>
                        <div class="message-content">
                            <div class="message-text">
                                <div class="typing-dots">
                                    <span></span>
                                    <span></span>
                                    <span></span>
                                </div>
                            </div>
                        </div>
                    `;

                    chatMessages.appendChild(typingIndicator);
                    chatMessages.scrollTop = chatMessages.scrollHeight;

                    // After 2 seconds, replace with bot message
                    setTimeout(function() {
                        chatMessages.removeChild(typingIndicator);

                        const botReply = document.createElement('div');
                        botReply.className = 'message received bot-message';

                        const currentTime = new Date();
                        const hours = currentTime.getHours().toString().padStart(2, '0');
                        const minutes = currentTime.getMinutes().toString().padStart(2, '0');
                        const timeString = `${hours}:${minutes}`;

                        botReply.innerHTML = `
                            <div class="message-avatar">
                                <img src="/api/placeholder/30/30" alt="Bot" />
                                <span class="bot-indicator">Bot</span>
                            </div>
                            <div class="message-content">
                                <div class="message-text">
                                    <p>Cảm ơn tin nhắn của bạn. Nhà tuyển dụng đang bận vào lúc này. Chúng tôi sẽ phản hồi trong thời gian sớm nhất. Bạn có thể xem thêm thông tin về công ty và vị trí công việc tại hồ sơ bên phải.</p>
                                </div>
                                <span class="message-time">${timeString}</span>
                            </div>
                        `;

                        chatMessages.appendChild(botReply);
                        chatMessages.scrollTop = chatMessages.scrollHeight;
                    }, 2000);
                }, 1000);
            }
        }

        // File upload handling
        const uploadArea = document.getElementById('uploadArea');
        const fileInput = document.getElementById('fileInput');
        const fileList = document.getElementById('fileList');

        uploadArea.addEventListener('dragover', function(e) {
            e.preventDefault();
            uploadArea.classList.add('drag-over');
        });

        uploadArea.addEventListener('dragleave', function() {
            uploadArea.classList.remove('drag-over');
        });

        uploadArea.addEventListener('drop', function(e) {
            e.preventDefault();
            uploadArea.classList.remove('drag-over');

            if (e.dataTransfer.files.length > 0) {
                handleFiles(e.dataTransfer.files);
            }
        });

        fileInput.addEventListener('change', function() {
            if (fileInput.files.length > 0) {
                handleFiles(fileInput.files);
            }
        });

        function handleFiles(files) {
            fileList.innerHTML = '';

            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                const fileSize = formatFileSize(file.size);
                const fileType = getFileIcon(file.name);

                const fileItem = document.createElement('div');
                fileItem.className = 'file-item';
                fileItem.innerHTML = `
                    <div class="file-icon">
                        <i class="fa ${fileType}"></i>
                    </div>
                    <div class="file-details">
                        <p class="file-name">${file.name}</p>
                        <span class="file-size">${fileSize}</span>
                    </div>
                    <button class="remove-file">
                        <i class="fa fa-times"></i>
                    </button>
                `;

                fileList.appendChild(fileItem);

                // Add event listener to remove button
                const removeBtn = fileItem.querySelector('.remove-file');
                removeBtn.addEventListener('click', function() {
                    fileList.removeChild(fileItem);
                });
            }

            // Show file list if files were added
            if (files.length > 0) {
                fileList.style.display = 'block';
            }
        }

        function formatFileSize(bytes) {
            if (bytes < 1024) {
                return bytes + ' bytes';
            } else if (bytes < 1048576) {
                return (bytes / 1024).toFixed(1) + ' KB';
            } else {
                return (bytes / 1048576).toFixed(1) + ' MB';
            }
        }

        function getFileIcon(filename) {
            const ext = filename.split('.').pop().toLowerCase();

            switch (ext) {
                case 'pdf':
                    return 'fa-file-pdf';
                case 'doc':
                case 'docx':
                    return 'fa-file-word';
                case 'xls':
                case 'xlsx':
                    return 'fa-file-excel';
                case 'ppt':
                case 'pptx':
                    return 'fa-file-powerpoint';
                case 'jpg':
                case 'jpeg':
                case 'png':
                case 'gif':
                    return 'fa-file-image';
                case 'zip':
                case 'rar':
                    return 'fa-file-archive';
                default:
                    return 'fa-file';
            }
        }

        // Conversation List Handling
        const conversations = document.querySelectorAll('.conversation');

        conversations.forEach(function(convo) {
            convo.addEventListener('click', function() {
                // Remove active class from all conversations
                conversations.forEach(c => c.classList.remove('active'));

                // Add active class to clicked conversation
                convo.classList.add('active');

                // Update header with conversation details
                const name = convo.querySelector('h4').textContent;
                document.querySelector('.contact-details h3').textContent = name;

                // Clear unread count
                const unreadBadge = convo.querySelector('.unread-count');
                if (unreadBadge) {
                    unreadBadge.remove();
                }
            });
        });

        // Add CSS for typing indicator
        const style = document.createElement('style');
        style.textContent = `
            .typing-dots {
                display: flex;
                padding: 6px 12px;
            }

            .typing-dots span {
                width: 8px;
                height: 8px;
                margin: 0 2px;
                background-color: #bbb;
                border-radius: 50%;
                display: inline-block;
                animation: typing-dot 1.4s infinite ease-in-out both;
            }

            .typing-dots span:nth-child(1) {
                animation-delay: 0s;
            }

            .typing-dots span:nth-child(2) {
                animation-delay: 0.2s;
            }

            .typing-dots span:nth-child(3) {
                animation-delay: 0.4s;
            }

            .file-item {
                display: flex;
                align-items: center;
                padding: 10px;
                background: #f8f9fa;
                border-radius: 6px;
                margin-bottom: 8px;
            }

            .file-icon {
                margin-right: 10px;
                font-size: 18px;
                width: 30px;
                text-align: center;
            }

            .file-icon .fa-file-pdf {
                color: #f44336;
            }

            .file-icon .fa-file-word {
                color: #2196F3;
            }

            .file-icon .fa-file-excel {
                color: #4CAF50;
            }

            .file-icon .fa-file-powerpoint {
                color: #FF9800;
            }

            .file-icon .fa-file-image {
                color: #9C27B0;
            }

            .file-details {
                flex: 1;
            }

            .file-name {
                font-size: 14px;
                margin-bottom: 2px;
            }

            .file-size {
                font-size: 11px;
                color: #707070;
            }

            .remove-file {
                background: none;
                border: none;
                color: #707070;
                cursor: pointer;
            }

            .drag-over {
                background-color: #f0f8ff;
                border-color: #2196F3;
            }
        `;

        document.head.appendChild(style);
    });
</script>